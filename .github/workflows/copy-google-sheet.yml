name: Deploy and Run Google Apps Script

on:
  workflow_dispatch:
    inputs:
      google_spreadsheet_id:
        description: 'Google Spreadsheet ID'
        default: '1Kwe4PFodciXo-XDX2bHN8F-CRAmopguoI9YKFX6piaQ'
        required: false
      google_sheet_id:
        description: 'Google Sheet ID'
        default: 118145754
        required: false
      new_sheet_name:
        description: 'New Sheet name'
        default: 'v0.0.1'
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install clasp
        run: npm install -g @google/clasp

      - name: Authenticate clasp
        env:
          CLASP_CREDENTIALS: ${{ secrets.CLASP_CREDENTIALS }}
        run: |
          echo "$CLASP_CREDENTIALS" > ~/.clasprc.json
          cat ~/.clasprc.json

      - name: Create .clasp.json if not exists
        run: |
          if [ ! -f .clasp.json ]; then
            clasp create --type sheets --title "Google Sheets Script"
          else
            echo ".clasp.json exists, skipping project creation."
          fi
          
      - name: Print appsscript.json before modification
        run: |
          if [ -f appsscript.json ]; then
            echo "appsscript.json content before modification:"
            cat appsscript.json
          else
            echo "appsscript.json does not exist."
          fi

      - name: Ensure appsscript.json with OAuth Scopes
        run: |
          if [ -f appsscript.json ]; then
            jq '. + {"oauthScopes": ["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/script.external_request", "https://www.googleapis.com/auth/script.projects", "https://www.googleapis.com/auth/script.webapp.deploy"]}' appsscript.json > tmp.json && mv tmp.json appsscript.json
          else
            echo '{
              "timeZone": "America/New_York",
              "dependencies": {},
              "exceptionLogging": "STACKDRIVER",
              "runtimeVersion": "V8",
              "oauthScopes": [
                "https://www.googleapis.com/auth/spreadsheets",
                "https://www.googleapis.com/auth/script.external_request",
                "https://www.googleapis.com/auth/script.projects",
                "https://www.googleapis.com/auth/script.webapp.deploy"
              ]
            }' > appsscript.json
          fi

      - name: Print appsscript.json after modification
        run: |
          echo "appsscript.json content after modification:"
          cat appsscript.json      

      - name: Create .claspignore
        run: |
          echo "node_modules/" > .claspignore
          echo "*.log" >> .claspignore
          echo "*.json" >> .claspignore
          echo "!appsscript.json" >> .claspignore
          echo "*.csv" >> .claspignore

      - name: Push and Deploy Script to Google Apps Script
        run: clasp push

      - name: Run Google Apps Script Function
        env:
          GOOGLE_SHEET_ID: ${{ github.event.inputs.google_spreadsheet_id }}
          SHEET_ID: ${{ github.event.inputs.google_sheet_id }}
          NEW_SHEET_NAME: ${{ github.event.inputs.new_sheet_name }}
        run: |
          clasp run copyAndProtectSheet --params "[\"$GOOGLE_SHEET_ID\", $SHEET_ID, \"$NEW_SHEET_NAME\"]"
